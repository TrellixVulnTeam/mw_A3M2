"""
fix ipv6 on HA systems

Revision ID: 77d2af1b121d
Revises: 264ac0d5da22
Create Date: 2020-10-21 16:10:40.802593+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '77d2af1b121d'
down_revision = '264ac0d5da22'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('network_alias', schema=None) as batch_op:
        batch_op.add_column(sa.Column(
            'alias_vipv6address',
            sa.String(length=45),
            nullable=True
        ))
        batch_op.alter_column(
            'alias_v6address',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )
        batch_op.alter_column(
            'alias_v6address_b',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )

    with op.batch_alter_table('network_globalconfiguration', schema=None) as batch_op:
        batch_op.alter_column(
            'gc_ipv6gateway',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )
        batch_op.alter_column(
            'gc_nameserver1',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )
        batch_op.alter_column(
            'gc_nameserver2',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )
        batch_op.alter_column(
            'gc_nameserver3',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )

    with op.batch_alter_table('network_interfaces', schema=None) as batch_op:
        batch_op.add_column(sa.Column(
            'int_vipv6address',
            sa.String(length=45),
            nullable=True
        ))
        batch_op.add_column(sa.Column(
            'int_ipv6address_b',
            sa.String(length=45),
            default='',
            nullable=False
        ))
        batch_op.alter_column(
            'int_ipv6address',
            existing_type=sa.VARCHAR(length=42),
            type_=sa.String(length=45),
            existing_nullable=False
        )
        batch_op.alter_column(
            'int_v6netmaskbit',
            existing_type=sa.VARCHAR(length=4),
            type_=sa.String(length=3),
            existing_nullable=False
        )


def downgrade():

    with op.batch_alter_table('network_alias', schema=None) as batch_op:
        batch_op.drop_column('alias_vipv6address')
        batch_op.alter_column(
            'alias_v6address',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )
        batch_op.alter_column(
            'alias_v6address_b',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )

    with op.batch_alter_table('network_globalconfiguration', schema=None) as batch_op:
        batch_op.alter_column(
            'gc_ipv6gateway',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )
        batch_op.alter_column(
            'gc_nameserver1',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )
        batch_op.alter_column(
            'gc_nameserver2',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )
        batch_op.alter_column(
            'gc_nameserver3',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )

    with op.batch_alter_table('network_interfaces', schema=None) as batch_op:
        batch_op.drop_column('int_vipv6address')
        batch_op.drop_column('int_ipv6address_b')
        batch_op.alter_column(
            'int_ipv6address',
            existing_type=sa.String(length=3),
            type_=sa.VARCHAR(length=4),
            existing_nullable=False
        )
        batch_op.alter_column(
            'int_v6netmaskbit',
            existing_type=sa.String(length=45),
            type_=sa.VARCHAR(length=42),
            existing_nullable=False
        )
